<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!--1.SpringMvc的配置文件-->
    <context:component-scan base-package="com.sias.mvc"></context:component-scan>
    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
    <mvc:view-controller path="/toadd" view-name="employee-add"></mvc:view-controller>
    <mvc:view-controller path="/file" view-name="file"></mvc:view-controller>
    <mvc:view-controller path="/Intercept" view-name="Intercept"></mvc:view-controller>
<!--    <mvc:view-controller path="/test-rest" view-name="test-rest"></mvc:view-controller>-->
<!--    <mvc:view-controller path="/employee" view-name="employee"></mvc:view-controller>-->
<!--    1.开启Mvc注解的驱动，就是Controller和RequestMapping起作用，是必须开启的
          笔记的形式去分析-->
    <mvc:annotation-driven/>
<!--    2.开启静态资源，为配置文件访问地址开启资源-->
    <mvc:default-servlet-handler/>
<!--    3.配置上传文件解析器，将上传的文件封装到MultipartFile对象里面-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>





<!--    4.拦截器的配置,配置好了之后，springMVC才知道这个类是一个拦截器的功能，才可以去实现相应的功能-->
<!--    <mvc:interceptors>-->
<!--        <ref bean="firstIntercept"></ref>-->
<!--        <ref bean="secondIntercept"></ref>-->
<!--    </mvc:interceptors>-->





<!--&lt;!&ndash;    5.配置异常处理的配置信息&ndash;&gt;-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--&lt;!&ndash;        当出现了错误的异常之后，是可以获取到这个异常的原因的，放到域对象中共享到浏览器页面，-->
<!--下面的是键值对的方式来的&ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ec"></property>-->
<!--    </bean>-->


</beans>